name: Deploy to Test and Prod

on:
  push:
    branches: [main]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  quality:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: site
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 
      - name: Setup Biome
        uses: biomejs/setup-biome@454fa0d884737805f48d7dc236c1761a0ac3cc13 
        with:
          version: latest
      - name: Run Biome
        run: biome ci ./src --reporter=github
  
  astro-check:
    strategy:
      matrix:
        node: [ 22, 23 ]
    runs-on: ubuntu-latest
    name: Astro Check for Node.js ${{ matrix.node }}
    defaults:
      run:
        working-directory: site
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v6
        with:
          node-version: ${{ matrix.node }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          package_json_file: site/package.json
          run_install: false

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run Astro Check
        run: pnpm astro check
  
  astro-build:
    runs-on: ubuntu-latest
    name: Astro Build
    defaults:
      run:
        working-directory: site
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v6
        with:
          node-version: 23

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          package_json_file: site/package.json
          run_install: false

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Clear Astro cache
        run: rm -rf .astro dist

      - name: Run Astro Build
        run: pnpm build

      - name: Upload dist artifact
        uses: actions/upload-artifact@v5
        with:
          name: site-build
          path: site/dist/
          retention-days: 1
  
  test-deployment:
    needs: astro-build
    runs-on: ubuntu-latest
    name: Deploy to Test Environment
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: us-east-1
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Download dist artifact
        uses: actions/download-artifact@v6
        with:
          name: site-build
          path: site/dist/

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        working-directory: infra
        run: terraform init -backend-config="backend/test-backend.hcl"

      - name: Terraform Apply
        working-directory: infra
        run: terraform apply -auto-approve -var-file="test.tfvars"

      - name: Sync to S3
        run: aws s3 sync site/dist/ s3://test-cloud-portfolio-website/ --delete

      - name: Invalidate CloudFront Cache
        run: |
          DISTRIBUTION_ID=$(aws cloudfront list-distributions --query "DistributionList.Items[?Aliases.Items[0]=='test.kalebcastillo.com'].Id" --output text)
          aws cloudfront create-invalidation --distribution-id $DISTRIBUTION_ID --paths "/*"

  test-site:
    needs: test-deployment
    runs-on: ubuntu-latest
    name: Run Tests
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Setup Python
        uses: actions/setup-python@v6
        with:
          python-version: '3.12'

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install moto boto3 pytest

      - name: Run View Counter Test
        run: pytest tests/test_view_counter.py -v

      - name: Run Integration Tests
        run: bash tests/test_integration.sh

  manual-approval:
    needs: test-site
    runs-on: ubuntu-latest
    name: Manual Approval for Production
    environment: production
    steps:
      - name: Waiting for Approval
        run: echo "Deployment to production pending manual approval. Review test site and approve to continue."

  prod-deployment:
    needs: manual-approval
    runs-on: ubuntu-latest
    name: Deploy to Production Environment
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: us-east-1
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Download dist artifact
        uses: actions/download-artifact@v6
        with:
          name: site-build
          path: site/dist/

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        working-directory: infra
        run: terraform init -backend-config="backend/prod-backend.hcl"

      - name: Terraform Apply
        working-directory: infra
        run: terraform apply -auto-approve -var-file="prod.tfvars"

      - name: Sync to S3
        run: aws s3 sync site/dist/ s3://prod-cloud-portfolio-website/ --delete

      - name: Invalidate CloudFront Cache
        run: |
          DISTRIBUTION_ID=$(aws cloudfront list-distributions --query "DistributionList.Items[?Aliases.Items[0]=='kalebcastillo.com'].Id" --output text)
          aws cloudfront create-invalidation --distribution-id $DISTRIBUTION_ID --paths "/*"

      - name: Deployment Complete
        run: echo "âœ… Production deployment complete! Site live at https://kalebcastillo.com"
